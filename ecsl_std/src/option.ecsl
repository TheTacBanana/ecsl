use panic::panic;

enum Option<T> {
    Some {
        val: T,
    },
    None,
}

impl<T> Option<T> {
    fn is_some(&self) -> bool {
        match (self) {
            Some { val } -> {
                return true;
            },
            None -> {
                return false;
            }
        }
    }

    fn is_none(&self) -> bool {
        match (self) {
            Some { val } -> {
                return false;
            },
            None -> {
                return true;
            }
        }
    }

    fn unwrap(self) -> T {
        match (self) {
            Some { val } -> {
                return val;
            },
            None -> {
                panic("Unwrap failed");
            }
        }
    }
}