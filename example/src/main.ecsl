fn ident<T>(t: T) T {
    return t;
}

struct Container<T> {
    t: Option<T>,
}

// struct Test {
//     o: Option<int>,
// }

fn main() {
    let i = Option::<int>::Some { val: 8 };
    let opt: Option<Option<int>> = Option::<Option<int>>::Some { val: i };

    match (opt) {
        Some { val } -> {
            match (val) {
                Some { val} -> {
                    // print_int(8);
                    print_int(val);
                },
                None -> {
                    print("Inner none");
                }
            }
        },
        None -> {
            print("None");
        }
    }

    // print_int(foo());
}

